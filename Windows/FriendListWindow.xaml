<Window x:Class="MISMC.Windows.FriendListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MISMC.Windows"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:c1="clr-namespace:MyMVVM"
        mc:Ignorable="d"
        Title="{Binding UserName}" Height="700" Width="400" AllowsTransparency="True" WindowStyle="None"
        WindowStartupLocation="CenterScreen">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <c1:MyEventCommand Command="{Binding  FriendListWindowClose}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid x:Name="bk" Background="Transparent" Height="35" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="35"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Path x:Name="arrow" Data="M 3,3 L 8,8 L 3,13" 
                                      HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="DarkGray" 
                                      StrokeThickness="2" VerticalAlignment="Center"/>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 3,3  L 8,8  L 13,3"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="bk" Value="#20333333"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="#25252F"/>
            <Setter Property="Background" Value="#DADE91"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                              DockPanel.Dock="Top" 
                                              Content="{TemplateBinding Header}" 
                                              Foreground="{TemplateBinding Foreground}" 
                                              Background="Black"
                                              FontWeight="{TemplateBinding FontWeight}" 
                                              FontStyle="{TemplateBinding FontStyle}" 
                                              FontStretch="{TemplateBinding FontStretch}" 
                                              FontSize="{TemplateBinding FontSize}" 
                                              FontFamily="{TemplateBinding FontFamily}" 
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                              Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" 
                                              Style="{StaticResource ExpanderDownHeaderStyle}" 
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="CanContentScroll" Value="True"></Setter>
            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>

            <Style.Resources>
                <SolidColorBrush x:Key="NormalBorderBrush" Color="#FFFF0000" />
                <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FFFF0000" />
                <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#FFFF0000" />
                <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#FFFF0000" />
                <SolidColorBrush x:Key="NormalBrush" Color="Transparent" />
                <!--滚动条样式-->
                <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Width" Value="8"/>
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <!-- 滑块正常颜色  FF428BCA  FF00FFFF -->
                                <Border x:Name="border"  Background="#FF428BCA" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" />
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <!-- 滑块鼠标移上去颜色80FFFFFF  -->
                                        <Setter Property="Background" TargetName="border" Value="#FF1F7AC9"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>


                <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                    <Grid >
                        <!-- 滑块背景颜色-->
                        <Border CornerRadius="2"  Background="Transparent"  BorderThickness="0" BorderBrush="#D6D4D4" />
                        <Track Name="PART_Track" IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" 
                                   Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}" 
                                   BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                            </Track.Thumb>
                        </Track>

                    </Grid>
                </ControlTemplate>

                <Style x:Key="HScrollBarThumb" TargetType="{x:Type Thumb}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Height" Value="9"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <!-- 滑块正常颜色-->
                                <Border  x:Name="border" CornerRadius="0" Background="#FF428BCA" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" />
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <!-- 滑块鼠标移上去颜色-->
                                        <Setter Property="Background" TargetName="border" Value="#FF1F7AC9"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
                    <Grid >
                        <!-- 滑块背景颜色-->
                        <Border  Grid.ColumnSpan="3"  CornerRadius="2" Background="Transparent"  BorderThickness="0" BorderBrush="#D6D4D4" />
                        <Track Name="PART_Track" IsDirectionReversed="False">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource HScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>

                <!--滚动条整体样式-->
                <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Style.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="Width" Value="Auto"/>
                            <Setter Property="Height" Value="8" />
                            <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Width" Value="8"/>
                            <Setter Property="Height" Value="Auto" />
                            <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="txtTest"  TargetType="{x:Type TextBox}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid x:Name="Grid">
                            <Border x:Name="Border" SnapsToDevicePixels="True"
                                CornerRadius="1"
                                BorderBrush="LightGray" BorderThickness="2" Background="White" />
                            <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0"
IsTabStop="False" Margin="2" VerticalAlignment="Stretch"  />

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="Blue"/>
                                <Setter TargetName="Border" Property="Opacity" Value="0.2"/>
                            </Trigger>

                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="Blue"/>
                                <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Grid" Property="Opacity" Value="0.2" />
                            </Trigger>

                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter TargetName="Grid" Property="IsEnabled" Value="False" />
                                <Setter TargetName="Border" Property="Opacity" Value="0.2" />
                                <Setter TargetName="PART_ContentHost" Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TextBoxStyle1" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="Bd" SnapsToDevicePixels="true" BorderBrush="#FFDDDDDD" BorderThickness="1" ClipToBounds="False" CornerRadius="5">
                            <Border.Effect>
                                <DropShadowEffect Color="White" Direction="0" ShadowDepth="0" BlurRadius="10"/>
                            </Border.Effect>
                            <!--这个Border主要用来遮挡框内的阴影，只要外阴影，如果只要内阴影不要外阴影，那么设置border的 ClipToBounds="True"  剪切外部内容，即可实现内阴影-->
                            <Border Background="White" CornerRadius="5">
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}">
                                </ScrollViewer>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF66AFE9"/>
                            </Trigger>

                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Effect" TargetName="Bd">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="10" Color="#FFE5F2FC" Direction="0" ShadowDepth="0"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF66AFE9"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PasswordBoxStyle1" BasedOn="{x:Null}" TargetType="{x:Type PasswordBox}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="Bd" SnapsToDevicePixels="true" BorderBrush="#FFDDDDDD" BorderThickness="1" ClipToBounds="False" CornerRadius="5">
                            <Border.Effect>
                                <DropShadowEffect Color="White" Direction="0" ShadowDepth="0" BlurRadius="10"/>
                            </Border.Effect>
                            <!--这个Border主要用来遮挡框内的阴影，只要外阴影，如果只要内阴影不要外阴影，那么设置border的 ClipToBounds="True"  剪切外部内容，即可实现内阴影-->
                            <Border Background="White" CornerRadius="5">
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}">
                                </ScrollViewer>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF66AFE9"/>
                            </Trigger>

                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Effect" TargetName="Bd">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="10" Color="#FFE5F2FC" Direction="0" ShadowDepth="0"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF66AFE9"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TextBlockStyle1" BasedOn="{x:Null}" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="Aquamarine"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>

        </Style>

        <Style x:Key="FilletButton" TargetType="{x:Type Button}" >
            <Setter Property="Background" Value="AliceBlue"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="BorderBrush" Value="Aqua"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true" CornerRadius="6,6,6,6">
                            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="SpringGreen"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Window.Resources>


    

    <!--上面是Recources，下面是具体布局-->
    <Grid Height="700">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="582"></RowDefinition>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0"  Height="25" MouseMove="TitleBar_MouseMove" MouseDown="TitleBar_MouseDown" Background="#4C9CFB" DockPanel.Dock="Top">
            <TextBlock Name="txtTitle" Margin="1,0,0,0"  Padding="5,3,2,3" Text="好友" 
                   HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="14" FontFamily="微软雅黑"  
                   Foreground="White"/>
            <StackPanel Width="auto" HorizontalAlignment="Right" Orientation="Horizontal">
                <Button HorizontalAlignment="Right" Width="25" Foreground="White" Background="#4C9CFB" x:Name="btn_min" Content="-"  
                             Click="btn_min_Click" Grid.Column="0"/>
                <Button HorizontalAlignment="Right" Width="25" Foreground="White" Background="#4C9CFB" x:Name="btn_close"  Content="×"  
                             Click="btn_close_Click" Grid.Column="0"/>
            </StackPanel>
        </DockPanel>
        <Grid Grid.Row="1">
            <StackPanel Background="#E4E2E3">
                <TextBlock Text="{Binding UserName}" Foreground="#676863" FontSize="30"></TextBlock>
                <TextBlock Text="{Binding Remark,UpdateSourceTrigger=PropertyChanged}" Foreground="#407D6E" FontSize="20" TextWrapping="Wrap"></TextBlock>
            </StackPanel>

        </Grid>
        <ToolBar  Grid.Row="2">
            <Button Margin="0,0,52,0" Style="{StaticResource FilletButton}" Content="个人信息">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <c1:MyEventCommand Command="{Binding  BtUserInfo}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Margin="0,0,52,0" Style="{StaticResource FilletButton}" Content="修改信息">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <c1:MyEventCommand Command="{Binding  BtModeMessage}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Margin="0,0,52,0" Style="{StaticResource FilletButton}" Content="修改密码">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <c1:MyEventCommand Command="{Binding  BtModePassWord}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Margin="0,0,0,0" Style="{StaticResource FilletButton}" Content="添加好友">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <c1:MyEventCommand Command="{Binding  BtAddFriend}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </ToolBar>

        <ScrollViewer Background="#474127"  Name="scroll" Height="auto" VerticalScrollBarVisibility="Visible" Grid.Row="3"  >
            
            <ItemsControl x:Name="itcl" ItemsSource="{Binding FriendRequestList}" >
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel></StackPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <DockPanel Background="#474127" Height="auto" >
                            <Label Content="{Binding Name}" Background="#B0C15D"></Label>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Background="#E9EAC8">
                                <Button Background="#E9EAC8" Style="{StaticResource FilletButton}" Margin="0,0,10,0" Width="40"  Content="同意">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <c1:MyEventCommand Command="{Binding  BtAgreeFriendRequest}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Background="#E9EAC8" Style="{StaticResource FilletButton}" Width="40" Content="拒绝">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <c1:MyEventCommand Command="{Binding  BtDeagreeFriendRequest}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </StackPanel>
                        </DockPanel>
                        <DataTemplate.Triggers>

                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <ScrollViewer Grid.Row="4"  VerticalScrollBarVisibility="Visible"  Margin="0,0.2,0,0" >
            

            <ItemsControl ItemsSource="{Binding friendGroups}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel></StackPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Expander Header="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                                  Style="{StaticResource ExpanderStyle1}"
                                  HorizontalAlignment="Stretch"  VerticalAlignment="Top" >
                            <Grid Background="#00000000">
                                <ItemsControl ItemsSource="{Binding Friends}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel></StackPanel>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>

                                            <Grid x:Name="bk" Height="60" HorizontalAlignment="Stretch" Background="#D5EDED" Margin="5,5,5,5">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="68"/>
                                                    <ColumnDefinition Width="80*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition></RowDefinition>
                                                </Grid.RowDefinitions>
                                                <StackPanel Grid.ColumnSpan="2" Grid.RowSpan="2">
                                                    <Grid >
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="300"></ColumnDefinition>
                                                            <ColumnDefinition Width="100"></ColumnDefinition>
                                                        </Grid.ColumnDefinitions>
                                                        <Label Grid.Column="0" Content="{Binding Name}" FontSize="20" Margin="0,5,0,0" >
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="MouseDoubleClick">
                                                                    <c1:MyEventCommand Command="{Binding  BtOpenChat}"/>
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </Label>
                                                        <Label Grid.Column="1"  x:Name="isOnline" ></Label>
                                                    </Grid>
                                                        
                                                        <TextBlock Margin="10,5,0,0" Style="{StaticResource TextBlockStyle1}"  Text="{Binding Remarks}" ></TextBlock>
                                                    </StackPanel>
                                                
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseRightButtonUp">
                                                        <c1:MyEventCommand Command="{Binding  BtOpenChoose}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </Grid>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding Status}" Value="1">
                                                    <Setter Property="Background" TargetName="bk" Value="#ffff99"/>
                                                    <Setter Property="Content" TargetName="isOnline" Value="在线"></Setter>
                                                    <Setter Property="Foreground" TargetName="isOnline" Value="#ff99a4"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Status}" Value="0">
                                                    <Setter Property="Background" TargetName="bk" Value="#808080"/>
                                                    <Setter Property="Content" TargetName="isOnline" Value="离线"></Setter>
                                                    <Setter Property="Foreground" TargetName="isOnline" Value="#1e2929"></Setter>
                                                </DataTrigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background" TargetName="bk" Value="#15333333"/>
                                                </Trigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>
                        </Expander>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</Window>
